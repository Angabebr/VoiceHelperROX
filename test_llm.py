#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ LLM –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ñ–∞–π–ª—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_llm_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å LLM"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ LLM...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        from main import check_llm_status, ask_llm, LLM_BACKEND
        
        print(f"üìä –¢–µ–∫—É—â–∏–π LLM –±—ç–∫–µ–Ω–¥: {LLM_BACKEND or '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        status = check_llm_status()
        print(f"üìã –°—Ç–∞—Ç—É—Å LLM:")
        print(f"   - Ollama: {'‚úÖ' if status['ollama'] else '‚ùå'}")
        print(f"   - Transformers: {'‚úÖ' if status['transformers'] else '‚ùå'}")
        print(f"   - –ê–∫—Ç–∏–≤–Ω—ã–π –±—ç–∫–µ–Ω–¥: {status['active_backend'] or '–ù–µ—Ç'}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å
        if LLM_BACKEND:
            print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞...")
            test_question = "–ß—Ç–æ —Ç–∞–∫–æ–µ Python?"
            print(f"–í–æ–ø—Ä–æ—Å: {test_question}")
            
            answer = ask_llm(test_question)
            print(f"–û—Ç–≤–µ—Ç: {answer}")
            
            if "–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞" in answer.lower() or "–æ—à–∏–±–∫–∞" in answer.lower():
                print("‚ö†Ô∏è  LLM –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                return False
            else:
                print("‚úÖ LLM —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                return True
        else:
            print("‚ö†Ô∏è  LLM –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def test_basic_functions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ–∑ LLM"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π...")
    
    try:
        from main import safe_eval_math, speak
        
        # –¢–µ—Å—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
        math_result = safe_eval_math("2 + 2")
        print(f"–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (2+2): {math_result}")
        
        # –¢–µ—Å—Ç —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ (–±–µ–∑ –≤—ã–≤–æ–¥–∞ –∑–≤—É–∫–∞)
        print("–¢–µ—Å—Ç —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏: '–¢–µ—Å—Ç'")
        speak("–¢–µ—Å—Ç")
        
        print("‚úÖ –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    basic_ok = test_basic_functions()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º LLM
    llm_ok = test_llm_integration()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   - –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: {'‚úÖ' if basic_ok else '‚ùå'}")
    print(f"   - LLM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: {'‚úÖ' if llm_ok else '‚ùå'}")
    
    if basic_ok and llm_ok:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    elif basic_ok:
        print("\n‚ö†Ô∏è  –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç, –Ω–æ LLM –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.")
        print("   –î–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Ollama –∏–ª–∏ transformers.")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.")

