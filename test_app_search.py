#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∏—Å–∫–∞ –∏ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ñ–∞–π–ª—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_app_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...")
    
    try:
        from main import find_installed_apps, find_start_menu_apps, search_apps_by_name
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        print("üìã –ü–æ–∏—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...")
        installed_apps = find_installed_apps()
        print(f"   –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ —Ä–µ–µ—Å—Ç—Ä–µ: {len(installed_apps)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        if installed_apps:
            print("   –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:")
            for i, (key, app_info) in enumerate(list(installed_apps.items())[:5]):
                print(f"     {i+1}. {app_info['name']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –≤ –º–µ–Ω—é –ü—É—Å–∫
        print("\nüìã –ü–æ–∏—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ –º–µ–Ω—é –ü—É—Å–∫...")
        start_menu_apps = find_start_menu_apps()
        print(f"   –ù–∞–π–¥–µ–Ω–æ —è—Ä–ª—ã–∫–æ–≤ –≤ –º–µ–Ω—é –ü—É—Å–∫: {len(start_menu_apps)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        if start_menu_apps:
            print("   –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —è—Ä–ª—ã–∫–æ–≤:")
            for i, (key, app_info) in enumerate(list(start_menu_apps.items())[:5]):
                print(f"     {i+1}. {app_info['name']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é...")
        test_queries = ['chrome', 'notepad', 'calculator', 'firefox', 'steam']
        
        for query in test_queries:
            print(f"\n   –ü–æ–∏—Å–∫: '{query}'")
            results = search_apps_by_name(query)
            if results:
                print(f"     –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
                for i, (key, app_info) in enumerate(results):
                    print(f"       {i+1}. {app_info['name']}")
            else:
                print(f"     –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        print("\n‚úÖ –ü–æ–∏—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–∏—Å–∫–∞: {e}")
        return False

def test_smart_launch():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–º–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"""
    print("\nüß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–º–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...")
    
    try:
        from main import smart_app_launch, LLM_BACKEND
        
        if not LLM_BACKEND:
            print("‚ö†Ô∏è  LLM –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–º–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–æ")
            return True
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        print("   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ 'notepad'...")
        result = smart_app_launch('notepad')
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        print("\n   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        result = smart_app_launch('–∫–∞–∫–æ–µ-—Ç–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ')
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
        print("\n‚úÖ –£–º–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —É–º–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    search_ok = test_app_search()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–º–Ω—ã–π –∑–∞–ø—É—Å–∫
    smart_ok = test_smart_launch()
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   - –ü–æ–∏—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π: {'‚úÖ' if search_ok else '‚ùå'}")
    print(f"   - –£–º–Ω—ã–π –∑–∞–ø—É—Å–∫: {'‚úÖ' if smart_ok else '‚ùå'}")
    
    if search_ok and smart_ok:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ü–æ–∏—Å–∫ –∏ –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç.")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏.")
